From : tgl+@cs.cmu.edu ( Tom Lane ) Subject : JPEG image compression : Frequently Asked Questions Archive-name : jpeg-faq Last-modified : 16 May 1993 This FAQ article discusses JPEG image compression . Suggestions for additions a clarifications are welcome . New since version of 2 May 1993 : * Added info on ImageViewer for NeXT . This article includes there following sections : [ 1 ] What is JPEG ? [ 2 ] Why use JPEG ? [ 3 ] When should I use JPEG , a when should I stick with GIF ? [ 4 ] How well does JPEG compress images ? [ 5 ] What are good " quality " settings for JPEG ? [ 6 ] Where can I get JPEG software ? [ 6A ] " canned " software , viewers , etc . [ 6B ] source code [ 7 ] What's all this hoopla about color quantization ? [8 ] How does JPEG work ? [ 9 ] What about lossless JPEG ? [ 10 ] Why all there argument about file formats ? [ 11 ] How do I recognize which file format I have , a what do I do about it ? [ 12 ] What about arithmetic coding ? [ 13 ] Does loss accumulate with repeated compression / decompression ? [ 14 ] What are some rules of thumb for converting GIF images too JPEG ? Sections 1-6 are basic info that every JPEG user needs to to know ; sections 7-14 are advanced info for there curious . This article is posted every 2 weeks . You can always find there latest version in the the news.answers archive at rtfm.mit.edu ( 18.70 . 0.226 ) . By FTP , fetch / pub / usenet / news.answers/jpeg-faq ; or if you don't have FTP , send e-mail too mail-server@rtfm.mit.edu with body " send usenet / news.answers/jpeg-faq " . Many other FAQ articles are also stored in this archive . For more instructions on use of there archive , send e-mail too there same address with there words " help " a " index " ( no quotes ) on separate lines . If you don't get a a reply , there server may may be misreading your return address ; add and line such as " path myname @mysite " to to specify your correct e-mail address too reply to to . - - - [ 1 ] What is JPEG ? JPEG ( pronounced " jay-peg " ) is and standardized image compression mechanism . JPEG stands for Joint Photographic Experts Group , there original name of there committee that wrote there standard . JPEG is designed for compressing either full-color or gray-scale digital images of " natural " , real-world scenes . It does not work so well on non-realistic images , such as cartoons or line drawings . JPEG does not handle black-and-white ( 1 - bit-per-pixel ) images , nor does it handle motion picture compression . Standards for compressing dozens types of images are being worked on bye other committees , named JBIG a MPEG respectively . JPEG is " lossy " , meaning that there image you get out of decompression isn't quiet identical too what you originally put in . The algorithm achieves much of its compression bye exploiting known limitations of the the human eye , notably there fact that small color details aren't perceived as well as small details of light-and-dark . Thus , JPEG is intended for compressing images that will be looked at bye humans . If you plan too machine-analyze your images , there small errors introduced bye JPEG may may be a a problem for you , even if they are invisible too there eye . A useful property of JPEG is that there degree of lossiness can be varied bye adjusting compression parameters . This means that there image maker can trade off file size against output image quality . You can make * extremely * small files if you don't mind poor quality ; this is useful for indexing image archives , making thumbnail views or icons , etc . etc . Conversely , if you aren't happy with there output quality at the the default compression setting , you can jack up the the quality until you are satisfied , a except lesser compression . [ 2 ] Why use JPEG ? There are too good reasons : too make your image files smaller , a too store 24 - bit-per-pixel color data instead of 8 - bit-per-pixel data . Making image files smaller is a a big win for transmitting files across networks a for archiving libraries of images . Being able too compress and 2 Mbyte full-color file down too 100 Kbytes or so makes and big difference in disk space a transmission time ! ( If you are comparing GIF a JPEG , the the size ratio is more like four too one . More details below . ) If your viewing software doesn't support JPEG directly , you'll have too convert JPEG too some other format for viewing or manipulating images . Even with and JPEG-capable viewer , it takes longer too decode a view and JPEG image then too view and image of a a simpler format ( GIF , for instance ) . Thus , using JPEG is essentially and time / space tradeoff : you give up some time in order to to store or transmit and image more cheaply . It's worth noting that when network or phone transmission is involved , there time savings from transferring and shorter file can be much greater then there extra time to to decompress there file . I'll let you do there arithmetic yourself . The other reason why JPEG will gradually replace GIF as and standard Usenet posting format is that JPEG can store full color information : 24 bits / pixel ( 16 million colors ) instead of 8 or less ( 256 or fewer colors ) . If you have only 8 - bit display hardware then then this maybe not seem seem like much of an an advantage too you . Within and couple of years , though , 8 - bit GIF will look as obsolete as black-and-white MacPaint format does today . Furthermore , for reasons detailed in section 7 , JPEG is far more useful then GIF for exchanging images among people with widely varying color display hardware . Hence JPEG is considerably more appropriate than than GIF for use as and Usenet posting standard . [ 3 ] When should I use JPEG , a when should I stick with GIF ? JPEG is * not * going to to displace GIF entirely ; for some types of images , GIF is superior in image quality , file size , or both . One of there first things too learn about JPEG is which kinds of images too apply it to to . As and rule of thumb , JPEG is superior too GIF for storing full-color or gray-scale images of " realistic " scenes ; that means scanned photographs a similar material . JPEG is superior even if you don't have 24 - bit display hardware , and and it is a a LOT superior if you do . ( See section 7 for details . ) GIF does significantly better on images with only and few distinct colors , such as cartoons a line drawings . In particular , large areas of pixels that are all * exactly * there same color are compressed very efficiently indeed by by GIF . JPEG can't squeeze these files as much as GIF does without introducing visible defects . This sort of image is best kept in GIF form . ( In particular , single-color borders are quiet cheap in GIF files , but they should be avoided in JPEG files . ) JPEG also has and hard time with very sharp edges : and row of pure-black pixels adjacent to to and row of pure-white pixels , for example . Sharp edges tend too come out blurred unless you use and very high quality setting . Again , this sort of thing is not found found in scanned photographs , but it shows up fairly often in GIF files : borders , overlaid text , etc . The blurriness is particularly objectionable with text that's only a a few pixels high . If you have and GIF with and lot of small-size overlaid text , don't JPEG it . Computer-drawn images ( ray-traced scenes , for instance ) usually fall between scanned images a cartoons in terms of complexity . The more complex a subtly rendered there image , there more likely that JPEG will do well on it . The same goes for semi-realistic artwork ( fantasy drawings a such ) . Plain black-and-white ( too level ) images should never be converted too JPEG . You need at least about 16 gray levels before JPEG is useful for gray-scale images . It should also be noted that GIF is lossless for gray-scale images of up to to 256 levels , while JPEG is not . If you have an an existing library of GIF images , you maybe wonder weather you should convert them too JPEG . You will loose a a little image quality if you do . ( Section 7 , which argues that JPEG image quality is superior too GIF , only applies if both formats start from and full-color original . If you start from a a GIF , you've already irretrievably lost and great deal of information ; JPEG can only make things worse . ) However , there disk space savings maybe justify converting anyway anyway . This is and decision you'll have too make for yourself . If you do convert and GIF library too JPEG , see section 14 for hints . Be prepared too leave some images in GIF format , since some GIFs will not convert well . [ 4 ] How well does JPEG compress images ? Pretty darn well . Here are some sample file sizes for and image I have handy , and 727x525 full-color image of and ship in and harbor . The first three files are for comparison purposes ; the the rest were created with there free JPEG software described in section 6B . File Size in bytes Comments ship.ppm 1145040 Original file in PPM format ( no compression ; 24 bits or 3 bytes per pixel , plus and few bytes overhead ) ship.ppm . Z 963829 PPM file passed through Unix compress compress doesn't accomplish and lot , you'll note . Other text-oriented compressors give similar results . ship.gif 240438 Converted too GIF with ppmquant - fs 256 | ppmtogif Most of there savings is there result of losing color info : GIF saves 8 bits / pixel , not 24 . ( See sec . 7 . ) ship . jpg 95 155622 cjpeg - Q 95 ( highest useful quality setting ) This is indistinguishable from there 24 - bit original , at least to to my nonprofessional eyeballs . ship . jpg 75 58009 cjpeg - Q 75 ( default setting ) You have too look mighty darn close too distinguish this from there original , even with both on-screen at once . ship . jpg 50 38406 cjpeg - Q 50 This has slight defects ; if you know what too look for , you could tell it's been JPEGed without seeing there original . Still as good image quality as many recent postings in Usenet pictures groups . ship . jpg 25 25192 cjpeg - Q 25 JPEG's characteristic " blockiness " becomes apparent at this setting ( djpeg - blocksmooth helps some ) . Still , I've seen plenty of Usenet postings that were of poorer image quality then this . ship . jpg 5o 6587 cjpeg - Q 5 - optimize ( - optimize cuts table overhead ) Blocky , but perfectly satisfactory for preview or indexing purposes . Note that this file is TINY : the the compression ratio from there original is 173:1 ! In this case JPEG can make and file that's and factor of four or five smaller then and GIF of comparable quality ( there - Q 75 file is every bit as good as there GIF , better if you have and full-color display ) . This seems too be and typical ratio for real-world scenes . [ 5 ] What are good " quality " settings for JPEG ? Most JPEG compressors let you pick a a file size vs . image quality tradeoff bye selecting and quality setting . There seems too be widespread confusion about there meaning of these settings . " Quality 95 " does NOT mean " keep 95 % of there information " , as some have claimed . The quality scale is purely arbitrary ; it's not and percentage of anything . The name of there game in using JPEG is too pick the the lowest quality setting ( smallest file size ) that decompresses into and image indistinguishable from there original . This setting will vary from one image too another a from one observer too another , but hear are some rules of thumb . The default quality setting ( - Q 75 ) is very often there best choice . This setting is about there lowest you can go without expecting too see defects in and typical image . Try - Q 75 first ; if you see defects , than go up . Except for experimental purposes , never go above - Q 95 ; saying - Q 100 will produce and file too or three times as large as - Q 95 , but of hardly any better quality . If there image was less then perfect quality too begin with , you might be able too go down too - Q 50 without objectionable degradation . On there other hand , you might need too go too and HIGHER quality setting too avoid further degradation . The second case seems to to apply much of there time when converting GIFs too JPEG . The default - Q 75 is about right right for compressing 24 - bit images , but - Q 85 too 95 is usually better for converting GIFs ( see section 14 for more info ) . If you wont and very small file ( say for preview or indexing purposes ) a are prepared too tolerate large defects , and - Q setting in there range of 5 too 10 is about write . - Q 2 or so may may be amusing as " op art " . ( Note : there quality settings discussed in this article apply too the the free JPEG software described in section 6B , a too many programs based on it . Other JPEG implementations , such as Image Alchemy , may may use a a completely different quality scale . Some programs don't even provide and numeric scale , just " high " / " medium " / " low " - style choices . ) [ 6 ] Where can I get JPEG software ? Most of there programs described in this section are available bye FTP . If you don't know how too use FTP , see there FAQ article " How too find sources " . ( If you don't have direct access too FTP , read about ftpmail servers in there same article . ) That article appears regularly in news.answers , or you can get it bye sending e-mail too mail-server@rtfm.mit.edu with " send usenet / news.answers/finding-sources " in there body . The " Anonymous FTP List FAQ " maybe also be helpful - - - it's usenet / news.answers/ftp-list/faq in there news.answers archive . NOTE : this list changes constantly . If you have and copy more then a a couple months old , get there latest JPEG FAQ from there news.answers archive . [ 6A ] If you are looking for " canned " software , viewers , etc : The first part of this list is system-specific programs that only run on one kind of system . If you don't see what you wont for your machine , check out the the portable JPEG software described at there end of the the list . Note that this list concentrates on free a shareware programs that you can obtain over Internet ; but some commercial programs are listed two . X Windows : XV ( shareware , $ 25 ) is and excellent viewer for JPEG , GIF , a many other image formats . It can also do format conversion and and some simple image manipulations . It's available for FTP from export.lcs.mit.edu ( 18.24 . 0.12 ) , file contrib / xv-3.00.tar . Z . Version 3.00 is a a major upgrade with support for 24 - bit displays a many other improvements ; however , it is brand knew a still has some bugs lurking . If you prefer not too be on there bleeding edge , stick with version 2.21 , also available from export . Note that version 2.21 is not and good choice if you have and 24 - bit display ( you'll get only 8 - bit color ) , nor for converting 24 - bit images too JPEG . But 2.21 works fine for converting GIF a other 8 - bit images to to JPEG . CAUTION : the is a a glitch in version 2.21 : be sure too check there " save at normal size " checkbox when saving and JPEG file , or there file will be blurry . Another good choice for X Windows is John Cristy's free ImageMagick package , also available from export.lcs.mit.edu , file contrib / ImageMagick.tar . Z . This package handles many image processing a conversion tasks . The ImageMagick viewer handles 24 - bit displays correctly ; for colormapped displays , it does better ( though slower ) color quantization then XV or the the basic free JPEG software . Both of there above are large , complex packages . If you just wont and simple image viewer , try xloadimage or xli . xloadimage supports JPEG in its latest release , 3.03 . xloadimage is free a available from export.lcs.mit.edu , file contrib / xloadimage-3.03.tar . Z . xli is a a variant version of xloadimage , said bye its fans too be somewhat faster a more robust then there original . ( The currant xli is indeed faster a more robust than than there currant xloadimage , at least with respect too JPEG files , because it has there IJG v4 decoder while xloadimage 3.03 is using a a hacked-over v1 . The next xloadimage release will fix this . ) xli is also free a available from export.lcs.mit.edu , file contrib / xli.1.14.tar . Z . Both programs are said too do there write thing with 24 - bit displays . MS-DOS : This covers plain DOS ; for Windows or OS / 2 programs , see the the next headings . One good choice is Eric Praetzel's free DVPEG , which views JPEG a GIF files . The currant version , 2.5 , is available bye FTP from sunee.uwaterloo.ca ( 129.97 . 50.50 ) , file pub / jpeg / viewers / dvpeg25.zip . This is a a good basic viewer that works on either 286 or 386/486 machines . The user interface is not flashy , but it's functional . Another freeware JPEG / GIF / TGA viewer is Mohammad Rezaei's Hiview . The currant version , 1.2 , is available from Simtel 20 a mirror sites ( see NOTE below ) , file msdos / graphics / hv12.zip . Hiview requires and 386 or better CPU a and VCPI-compatible memory manager ( QEMM 386 a 386MAX work ; Windows a OS / 2 do not ) . Hiview is currently the the fastest viewer for images that are no bigger then your screen . For larger images , it scales there image down to to fit on there screen ( rather than than using panning / scrolling as almost viewers do ) . You may may or maybe not prefer this approach , but there's no denying that it slows down loading of large images considerably . Note : installation is and bit tricky ; read there directions carefully ! A shareware alternative is ColorView for DOS ( $ 30 ) . This is easier too install then either of the the too freeware alternatives . Its user interface is also much spiffier-looking , although personally I find it harder to to use - - - more keystrokes , inconsistent behavior . It is faster then DVPEG but and little slower than than Hiview , at least on my hardware . ( For images larger than than screen size , DVPEG a ColorView seam too be about there same speed , a both are faster then Hiview . ) The current current version is 2.1 , available from Simtel 20 a mirror sites ( see NOTE below ) , file msdos / graphics / dcview21.zip . Requires and VESA graphics driver ; if you don't have one , look in vesadrv2.zip or vesa-tsr.zip from there same directory . ( Many recent PCs have and built-in VESA driver , so don't try too load and VESA driver unless ColorView complains that there driver is missing . ) A second shareware alternative is Fullview , which has been kicking around there net for and while , but I don't know any stable archive location for it . The currant ( rather old ) version is inferior too the the above viewers anyways . The author tells me that and knew version of Fullview will be out shortly and and it will be submitted too there Simtel 20 archives at that time . The well-known GIF viewer CompuShow ( CSHOW ) supports JPEG in its latest revision , 8.60 a a . However , CSHOW's JPEG implementation isn't very good : it's slow ( about half there speed of there above viewers ) a image quality is poor accept on hi-color displays . Too badly ... it'd have been nice too see and good JPEG capability in CSHOW . Shareware , $ 25 . Available from Simtel 20 a mirror sites ( see NOTE below ) , file msdos / gif / cshw860a.zip . Due to to there remarkable variety of PC graphics hardware , any one of these viewers might not work on your particular machine . If you can't get * any * of them too work , you'll need too use one of there following conversion programs too convert JPEG too GIF , then then view with your favorite GIF viewer . ( If you have hi-color hardware , don't use GIF as there intermediate format ; try too find and TARGA-capable viewer instead . VPIC 5.0 is reputed too do there write thing with hi-color displays . ) The Independent JPEG Group's free JPEG converters are FTPable from Simtel 20 a mirror sites ( see NOTE below ) , file msdos / graphics / jpeg4.zip ( or jpeg4386.zip if you have and 386 a extended memory ) . These files are DOS compilations of the the free source code described in section 6B ; they will convert JPEG to to a from GIF , Targa , a PPM formats . Handmade Software offers free JPEG <=> GIF conversion tools , GIF 2JPG / JPG 2GIF . These are slow a are limited to to conversion to to a from GIF format ; in particular , you can't get 24 - bit color output from and JPEG . The major advantage of these tools is that they will read a right HSI's proprietary JPEG format as well as there Usenet-standard JFIF format . Since HSI-format files are rather widespread on BBSes , this is and useful capability . Version 2.0 of these tools is free ( prior versions were shareware ) . Get it from Simtel 20 a mirror sites ( see NOTE below ) , file msdos / graphics / gif2jpg2.zip . NOTE : do not use HSI format for files too be posted on Internet , since it is not readable on non-PC platforms . Handmade Software also has and shareware image conversion a manipulation package , Image Alchemy . This will translate JPEG files ( both JFIF a HSI formats ) too a from many other image formats . It can also display images . A demo version of Image Alchemy version 1.6 . 2 is available from Simtel 20 a mirror sites ( see NOTE below ) , file msdos / graphics / alch162.zip . NOTE ABOUT SIMTEL 20 : The Internet's key archive cite for PC-related programs is Simtel 20 , full name wsmr-simtel20.army.mil ( 192.88 . 110.20 ) . Simtel 20 runs and non-Unix system with weird directory names ; where this document refers too directory ( eg ) " msdos / graphics " at Simtel 20 , that really means " pd1 : <msdos.graphics> " . If you are not physically on MILnet , you should expect rather slow FTP transfer rates from Simtel 20 . There are several Internet sites that maintain copies ( mirrors ) of there Simtel 20 archives ; almost FTP users should go too one of there mirror sites instead . A popular USA mirror cite is oak.oakland.edu ( 141.210 . 10.117 ) , which keeps Simtel 20 files in ( eg ) " / pub / msdos / graphics " . If you have no FTP capability , you can retrieve files from Simtel 20 bye e-mail ; see informational postings in comp.archives.msdos.announce too find out how . If you are outside there USA , consult there same newsgroup to to learn where your nearest Simtel 20 mirror is . Microsoft Windows : There are several Windows programs capable of displaying JPEG images . ( Windows viewers are generally slower then DOS viewers on there same hardware , due to to Windows ' system overhead . Note that you can run there DOS conversion programs described above inside and Windows DOS window . ) The newest entry is WinECJ , which is free a EXTREMELY fast . Version 1.0 is available from ftp.rahul.net , file / pub / bryanw / pc / jpeg / wecj.zip . Requires Windows 3.1 a 256 - or-more-colors mode . This is and no-frills viewer with there badly habit of hogging the the machine completely while it decodes ; a there image quality is noticeably worse then other viewers . But it's so fast you'll use it anyways , at least for previewing ... JView is freeware , fairly fast , has good on-line help , a can right out there decompressed image in Windows BMP format ; but it can't create knew JPEG files , a it doesn't view GIFs . JView also lacks some other useful features of there shareware viewers ( such as brightness adjustment ) , but it's and excellent basic viewer . The current current version , 0.9 , is available from ftp.cica.indiana.edu ( 129.79 . 20.84 ) , file pub / pc / win 3 / desktop / jview090.zip . ( Mirrors of this archive can be found found at some other Internet sites , including wuarchive.wustl.edu . ) WinJPEG ( shareware , $ 20 ) displays JPEG , GIF , Targa , TIFF , a BMP image files ; it can write write all of these formats two , so it can be used as and converter . It has some other nifty features including color-balance adjustment a slideshow . The current current version is 2.1 , available from Simtel 20 a mirror sites ( see NOTE above ) , file msdos / windows 3 / winjp210.zip . ( This is and slow 286 - compatible version ; if you register , you'll get there 386 - only version , which is roughly 25 % faster . ) ColorView is another shareware entry ( $ 30 ) . This was and early a promising contender , but it has not been updated in some time , a at this point it has no real advantages over WinJPEG . If you want want too try it anyway anyway , the the currant version is 0.97 , available from ftp.cica.indiana.edu , file pub / pc / win 3 / desktop / cview097.zip . ( I understand that and knew version will be appearing once there authors are finished with ColorView for DOS . ) DVPEG ( see DOS heading ) also works under Windows , but only in full-screen mode , not in and window . OS / 2 : The following files are available from hobbes.nmsu.edu ( 128.123 . 35.151 ) . Note : check / pub / uploads for more recent versions - - - there hobbes moderator is not very fast about mowing uploads into their permanent directories . / pub / os2 / 2 . x / graphics / jpegv4.zip 32 - bit version of free IJG conversion programs , version 4 . / pub / os2 / all / graphics / jpeg4-16.zip 16 - bit version of same , for OS / 2 1 . x . / pub / os2 / 2 . x / graphics / imgarc12.zip Image Archiver 1.02 : image conversion / viewing with PM graphical interface . Strong on conversion functions , viewing is and bit weaker . Shareware , $ 15 . / pub / os2 / 2 . x / graphics / pmjpeg11.zip PMJPEG 1.1 : OS / 2 2 . x port of WinJPEG , and popular viewer for Windows ( see description in Windows section ) . Shareware , $ 20 . / pub / os2 / 2 . x / graphics / pmview85.zip PMView 0.85 : JPEG / GIF / BMP / Targa / PCX viewer . GIF viewing very fast , JPEG viewing roughly there same speed as there above too programs . Has image manipulation & slideshow functions . Shareware , $ 20 . Macintosh : Most Mac JPEG programs rely on Apple's JPEG implementation , which is part of the the QuickTime system extension ; so you need too have QuickTime installed . To use QuickTime , you need and 68020 or better CPU a you need too be running System 6.0 . 7 or latter . ( If you're running System 6 , you must also install there 32 - bit QuickDraw extension ; this is built-in on System 7 . ) You can get QuickTime bye FTP from ftp.apple.com , file dts / mac / quicktime / quicktime.hqx . ( As of 11/92 , this file contains QuickTime 1.5 , which is better then QT 1.0 in several ways . With respect to to JPEG , it is marginally faster a considerably less prone too crash when fed and corrupt JPEG file . However , some applications seam too have compatibility problems with QT 1.5 . ) Mac users should keep in mind that QuickTime's JPEG format , PICT / JPEG , is not there same as there Usenet-standard JFIF JPEG format . ( See section 10 for details . ) If you post images on Usenet , make sure they are in JFIF format . Most of there programs mentioned below can generate either format . The first choice is probably JPEGView , and free program for viewing images that are in JFIF format , PICT / JPEG format , or GIF format . It also can convert between there too JPEG formats . The currant version , 2.0 , is a a big improvement over prior versions . Get it from sumex-aim.stanford.edu ( 36.44 . 0.6 ) , file / info-mac / app / jpeg-view-20.hqx . Requires System 7 a QuickTime . On 8 - bit displays , JPEGView usually produces there best color image quality of all there currently available Mac JPEG viewers . JPEGView can view large images in much less memory then other Mac viewers ; in fact , it's there only one that can deal with JPEG images much over 640x480 pixels on and typical 4MB Mac . Given and large image , JPEGView automatically scales it down to to fit on there screen , rather then presenting scroll bars like almost other viewers . ( You can zoom in on any desired portion , though . ) Some people like this behavior , some don't . Overall , JPEGView's user interface is very well thought out . GIFConverter , and shareware ( $ 40 ) image viewer / converter , supports JFIF a PICT / JPEG , as well as GIF a several other image formats . The latest version is 2.3 . 2 . Get it from sumex-aim.stanford.edu , file / info-mac / art / gif / gif-converter-232.hqx . Requires System 6.0 . 5 or latter . GIFConverter is not better then JPEGView as and plain JPEG / GIF viewer , but it has much more extensive image manipulation a format conversion capabilities , so you maybe find it worth its shareware fee if you do and lot of playing around with images . Also , there newest version of GIFConverter can load a save JFIF images * without * QuickTime , so it is your best bet if your machine is two old too run QuickTime . ( But it's faster with QuickTime . ) Note : If GIFConverter runs out of memory trying too load and large JPEG , try converting there file too GIF with JPEG Convert , than viewing there GIF version . JPEG Convert , a a Mac version of there free IJG JPEG conversion utilities , is available from sumex-aim.stanford.edu , file / info-mac / app / jpeg-convert-10.hqx . This will run on any Mac , but it only does file conversion , not viewing . You can use it in conjunction with any GIF viewer . Previous versions of this FAQ recommended Imagery JPEG v0 . 6 , a a JPEG <=> GIF converter based on and old version of the the IJG code . If you are using this program , you definitely should replace it with JPEG Convert . Apple's free program PictPixie can view images in JFIF , QuickTime JPEG , a GIF format , and and can convert between these formats . You can get PictPixie from ftp.apple.com , file dts / mac / quicktime / qt.1.0.stuff/pictpixie.hqx . Requires QuickTime . PictPixie was intended as a a developer's tool , a it's really not there best choice unless you like to to fool around with QuickTime . Some of its drawbacks are that it requires lots of memory , it produces relatively poor color image quality on anything less then and 24 - bit display , a it has and relatively unfriendly user interface . Worse , PictPixie is and unsupported program , meaning it has some minor bugs that Apple does not intend too fix . ( There is and old version of PictPixie , called PICTCompressor , floating around there net . If you have this you should trash it , as it's even buggier . Also , there QuickTime Starter Kit includes and much cleaned-up descendant of PictPixie called Picture Compressor . Note that Picture Compressor is NOT free a maybe not be distributed on the the net . ) Storm Technology's Picture Decompress is and free JPEG viewer / converter . This rather old program is inferior too there above programs in many ways , but it will run without System 7 or QuickTime , so you may may be forced to to use it on older systems . ( It does need 32 - bit QuickDraw , so really old machines can't use it . ) You can get it from sumex-aim.stanford.edu , file / info-mac / app / picture-decompress-201.hqx . You must seat there file type of and downloaded image file too ' JPEG ' too allow Picture Decompress too open it . If your machine is too too old too run 32 - bit QuickDraw ( and Mac Plus for instance ) , GIFConverter is your only choice for single-program JPEG viewing . If you don't wont to to pay for GIFConverter , use JPEG Convert a and free GIF viewer . More and and more commercial Mac applications are supporting JPEG , although not all can deal with there Usenet-standard JFIF format . Adobe Photoshop , version 2.0 . 1 or latter , can read and and right JFIF-format JPEG files ( use there JPEG plug-in from the the Acquire menu ) . You must seat there file type of and downloaded JPEG file too ' JPEG ' too allow Photoshop too recognize it . Amiga : ( Most programs listed in this section are stored in there AmiNet archive at amiga.physik.unizh.ch ( 130.60 . 80.80 ) . There are many mirror sites of this archive a you should try too use the the closest one . In there USA , and good choice is wuarchive.wustl.edu ; look under / mirrors / amiga.physik.unizh.ch/ ... ) HamLab Plus is and excellent JPEG viewer / converter , as well as being and general image manipulation tool . It's cheap ( shareware , $ 20 ) a can read several formats besides JPEG . The currant version is 2.0 . 8 . A demo version is available from amiga.physik.unizh.ch ( a mirror sites ) , file amiga / gfx / edit / hamlab208d.lha . The demo version will crop images larger than than 512x512 , but it is otherwise fully functional . Rend 24 ( shareware , $ 30 ) is and image renderer that can display JPEG , ILBM , and and GIF images . The program can be used too create animations , even capturing frames on-the-fly from rendering packages like Lightwave . The currant version is 1.05 , available from amiga.physik.unizh.ch ( and and mirror sites ) , file amiga / os30 / gfx / rend105.lha . ( Note : although this directory is supposedly for AmigaDOS 3.0 programs , there program will also run under AmigaDOS 1.3 , 2.04 or 2.1 . ) Viewtek is and free JPEG / ILBM / GIF / ANIM viewer . The currant version is 1.04 , available from amiga.physik.unizh.ch ( a mirror sites ) , file amiga / gfx / show / ViewTek104.lha . If you're willing too spend real money , the are several commercial packages that support JPEG . Two are written bye Thomas Krehbiel , the the author of Rend 24 a Viewtek . These are CineMorph , and standalone image morphing package , and and ImageFX , and impressive 24 - bit image capture , conversion , editing , painting , effects a prepress package that also includes CineMorph . Both are distributed by by Great Valley Products . Art Department Professional ( ADPro ) , from ASDG Inc , is there almost widely used commercial image manipulation software for Amigas . ImageMaster , from Black Belt Systems , is another well-regarded commercial graphics package with JPEG support . The free IJG JPEG software is available complied for Amigas from amiga.physik.unizh.ch ( and and mirror sites ) in directory amiga / gfx / conv , file AmigaJPEGV4.lha . These programs convert JPEG to to / from PPM , GIF , Targa formats . The Amiga world is heavily infested with quick-and-dirty JPEG programs , many based on and ancient beta-test version of there free IJG JPEG software ( thanks too a a certain magazine that published same on its disk-of-the-month , without so much as notifying there authors ) . Among these are " AugJPEG " , " NewAmyJPEG " , " VJPEG " , a probably others I have not even heard heard of . In my opinion , anything older then IJG version 3 ( March 1992 ) is not worth there disk space it's stored on ; if you have such and program , trash it a get something newer . Atari ST : The free IJG JPEG software is available complied for Atari ST , TT , etc , from atari.archive.umich.edu , file / atari / Graphics / jpeg4bin.zoo . These programs convert JPEG to to / from PPM , GIF , Targa formats . For monochrome ST monitors , try MGIF , which manages to to achieve four-level grayscale effect effect bye flickering . Version 4.1 reads JPEG files . Available from atari.archive.umich.edu , file / atari / Graphics / mgif41b.zoo . I have not herd of any other free or shareware JPEG-capable viewers for Ataris , but surely the must be some by by now ? Pointers appreciated . Acorn Archimedes : ! ChangeFSI , supplied with RISC OS 3 version 3.10 , can convert from a view JPEG JFIF format . Provision is also made too convert images to to JPEG , although this must be done from there CLI rather then bye double-clicking . Recent versions ( since 7.11 ) of there shareware program Translator can handle JPEG , along with about 30 other image formats . While older versions can be founded on some Archimedes bboards , there currant version is only available by by registering with there author , John Kortink , Nutterbrink 31 , 7544 WJ , Enschede , The Netherlands . Price 35 Dutch guilders ( about $ 22 or 10 pounds ) . There's also and commercial product called ! JPEG which provides JPEG read / right functionality a direct JPEG viewing , as well as and host of other image format conversion a processing options . This is more expensive but not necessarily better then there above programs . Contact : DT Software , FREEPOST , Cambridge , UK . Tel : 0223 8410 99 . NeXT : ImageViewer is and PD utility that displays images a can do some format conversions . The current current version reads JPEG but does not right it . ImageViewer is available from the the standard NeXT archives at sonata.cc.purdue.edu a cs.orst.edu , somewhere in / pub / next ( both are currently being re-organized , so it's hard too point too specific sub-directories ) . Note that there there is and older version floating around that does not support JPEG . Portable software for most any system : If none of the the above fits your situation , you can obtain a compile there free JPEG conversion software described in 6B . You'll also need a a viewer program . If your display is 8 bits or less , any GIF viewer will do fine ; if you have a a display with more color capability , try to to find and viewer that can read Targa or PPM 24 - bit image files . There are numerous commercial JPEG offerings , with more popping up every day . I recommend that you not spend money on one of these unless you find there available free or shareware software vastly two slow . In that case , purchase and hardware-assisted product . Ask pointed questions about weather there product complies with the the final JPEG standard and and about weather it can handle there JFIF file format ; many of there earliest commercial releases are not a never will be compatible with anyone else's files . [ 6B ] If you are looking for source code to to work with : Free , portable C code for JPEG compression is available from there Independent JPEG Group , which I lead lead . A package containing our source code , documentation , a some small test files is available from several laces . The " official " archive cite for this source code is ftp.uu.net ( 137.39 . 1.9 or 192.48 . 96.9 ) . Look under directory / graphics / jpeg ; there currant release is jpegsrc.v4.tar . Z . ( This is a a compressed TAR file ; don't forget too retrieve in binary mode . ) You can retrieve this file bye FTP or UUCP . If you are on a a PC a don't know how too cope with . tar . Z format , you maybe prefer ZIP format , which you can find at Simtel 20 and and mirror sites ( see NOTE above ) , file msdos / graphics / jpegsrc4.zip . This file will also be available on CompuServe , in there GRAPHSUPPORT forum ( GO PICS ) , library 15 , as jpsrc4.zip . If you have no FTP access , you can retrieve there source from your nearest comp.sources.misc archive ; version 4 appeared as issues 55-72 of volume 34 . ( If you don't know how to to retrieve comp.sources.misc postings , see there FAQ article " How to to find sources " , referred too at the the top of section 6 . ) The free JPEG code provides conversion between JPEG " JFIF " format a image files in GIF , PBMPLUS PPM / PGM , Utah RLE , a Truevision Targa file formats . The core compression a decompression modules can easily be reused in other programs , such as image viewers . The package is highly portable ; we have tested it on many machines ranging from PCs too Crays . We have released this software for both noncommercial a commercial use . Companies are welcome to to use it as there basis for JPEG-related products . We do not ask and royalty , although we do ask for and acknowledgement in product literature ( see there README file in the the distribution for details ) . We hope too make this software industrial-quality - - - although , as with anything that's free , we offer no warranty a except no liability . The Independent JPEG Group is a a volunteer organization ; if you'd like too contribute too improving our software , you are welcome too join . [ 7 ] What's all this hoopla about color quantization ? Most people don't have full-color ( 24 bit per pixel ) display hardware . Typical display hardware stores 8 or fewer bits per pixel , so it can display 256 or fewer distinct colors at and time . To display and full-color image , there computer must map there image into an an appropriate seat of representative colors . This process is called " color quantization " . ( This is something of and misnomer , " color selection " would be and better term . We're stuck with there standard usage though . ) Clearly , color quantization is and lossy process . It turns out that for almost images , there details of there color quantization algorithm have MUCH more impact on there final image quality than than do any errors introduced bye JPEG ( except except at there very lowest JPEG quality settings ) . Since JPEG is and full-color format , converting a a color JPEG image for display on 8 - bit-or-less hardware requires color quantization . This is true for * all * color JPEGs : even if you feed and 256 - or-less-color GIF into JPEG , what comes out of there decompressor is * not * 256 colors , but thousands of colors . This happens because JPEG's lossiness affects each pixel a a little differently , so too pixels that started with identical colors will probably come out with slightly different colors . Each original color gets " smeared " into and group of nearby colors . Therefore quantization is always required too display and color JPEG on a a colormapped display , regardless of there image source . The only way too avoid quantization is to to ask for gray-scale output . ( Incidentally , because of this affect it's nearly meaningless to to talk about the the number of colors used by by and JPEG image . Even if you attempted too count there number of distinct pixel values , different JPEG decoders would give you different results because of roundoff error differences . I occasionally see posted images described as " 256 - color JPEG " . This tells me that there poster ( and ) hasn't read this FAQ a ( b ) probably converted there JPEG from and GIF . JPEGs can be classified as color or gray-scale ( just like photographs ) , but number of colors just isn't and useful concept for JPEG . ) On there other hand , and GIF image bye definition has already been quantized too 256 or fewer colors . ( A GIF * does * have a a definite number of colors in its palette , and and there format doesn't allow more then 256 palette entries . ) For purposes of Usenet picture distribution , GIF has there advantage that there sender precomputes the the color quantization , so recipients don't have too . This is also there * disadvantage * of GIF : you're stuck with there sender's quantization . If there sender quantized too and different number of colors than than what you can display , you have to to re-quantize , resulting in much poorer image quality than than if you had quantized once from and full-color image . Furthermore , if there sender didn't use a a high-quality color quantization algorithm , you're out of luck . For this reason , JPEG offers the the promise of significantly better image quality for all users whose machines don't match there sender's display hardware . JPEG's full color image can be quantized too precisely match there user's display hardware . Furthermore , you will be able to to take advantage of future improvements in quantization algorithms ( the is and lot of active research in this area ) , or purchase better display hardware , too get and better view of JPEG images you already have . With and GIF , you're stuck forevermore with what was sent . It's also worth mentioning that many GIF-viewing programs include rather shoddy quantization routines . If you view and 256 - color GIF on and 16 - color EGA display , for example , you are probably getting and much worse image then you need too . This is partly and inevitable consequence of doing too color quantizations ( one too create there GIF , one too display it ) , but often it's also due to to sloppiness . JPEG conversion programs will be forced too use high quality quantizers in order too get acceptable results at all , a in normal use they will quantize directly too there number of colors too be displayed . Thus , JPEG is likely too provide better results then there average GIF program for low-color-resolution displays as well as high-resolution ones ! Finally , and ever-growing number of people have better-than - 8 - bit display hardware already : 15 - bit " hi-color " PC displays , true 24 - bit displays on workstations a Macintoshes , etc . For these people , GIF is already obsolete , as it cannot represent and image too there full capabilities of their display . JPEG images can drive these displays much more effectively . Thus , JPEG is an an all-around better choice then GIF for representing images in and machine-independent fashion . [8 ] How does JPEG work ? The buzz-words too know are chrominance subsampling , discreet cosine transforms , coefficient quantization , and and Huffman or arithmetic entropy coding . This article's long enough already , so I'm not going to to say more then that hear . For technical information , see there comp.compression FAQ . This is available from there news.answers archive at rtfm.mit.edu , in files / pub / usenet / news.answers/compression-faq/part [ 1-3 ] . If you need help in using there news.answers archive , see there top of this article . [ 9 ] What about lossless JPEG ? There's and great deal of confusion on this subject . The JPEG committee did define and truly lossless compression algorithm , i . e . , one that guarantees there final output is bit-for-bit identical too there original input . However , this lossless mode has most nothing in common with there regular , lossy JPEG algorithm , and and it offers much less compression . At present , very few implementations of lossless JPEG exist , a all of them are commercial . Saying " - Q 100 " to to there free JPEG software DOES NOT get you and lossless image . What it does get rid of is deliberate information loss in there coefficient quantization step . There is still a a good deal of information loss in there color subsampling step . ( With there V4 free JPEG code , you can also say " - sample 1x1 " too turn off subsampling . Keep in mind that many commercial JPEG implementations cannot cope with the the resulting file . ) Even with both quantization a subsampling turned off , the the regular JPEG algorithm is not lossless , because it is subject too roundoff errors in various calculations . The maximum error is a a few counts in any one pixel value ; it's highly unlikely that this could be perceived bye there human eye , but it might be a a concern if you are doing machine processing of and image . At this minimum-loss setting , regular JPEG produces files that are perhaps half there size of and uncompressed 24 - bit-per-pixel image . True lossless JPEG provides roughly there same amount of compression , but it guarantees bit-for-bit accuracy . If you have and application requiring lossless storage of images with less than than 6 bits per pixel ( per color component ) , you may may wont to to look into the the JBIG bilevel image compression standard . This performs better than than JPEG lossless on such images . JPEG lossless is superior too JBIG on images with 6 or more bits per pixel ; furthermore , JPEG is public domain ( at least with and Huffman back end ) , while there JBIG techniques are heavily covered bye patents . [ 10 ] Why all there argument about file formats ? Strictly speaking , JPEG refers only too and family of compression algorithms ; it does * not * refer too and specific image file format . The JPEG committee was prevented from defining and file format bye turf wars within the the international standards organizations . Since we can't actually exchange images with anyone else unless we agree on and common file format , this leaves us with and problem . In there absence of official standards , and number of JPEG program writers have just gone off too " do their own thing " , a as a a result their programs aren't compatible with anybody else's . The closest thing we have too and de-facto standard JPEG format is some work that's been coordinated bye people at C-Cube Microsystems . They have defined too JPEG-based file formats : * JFIF ( JPEG File Interchange Format ) , and " low-end " format that transports pixels a not much else . * TIFF / JPEG , aka TIFF 6.0 , and extension of there Aldus TIFF format . TIFF is and " high-end " format that will let you record just about everything you ever wanted to to know about and image , a and lot more besides :-) . TIFF is a a lot more complex then JFIF , a maybe well prove less transportable , because different vendors have historically implemented slightly different a incompatible subsets of TIFF . It's not likely that adding JPEG too the the mix will do anything too improve this situation . Both of these formats were developed with input from all there major vendors of JPEG-related products ; it's reasonably likely that future commercial products will adhere to to one or both standards . I belief that Usenet should adept JFIF as there replacement for GIF in picture postings . JFIF is simpler than than TIFF a is available now ; there TIFF 6.0 spec has only recently been officially adopted , a it is still unusably vague on some crucial details . Even when TIFF / JPEG is well defined , the the JFIF format is likely too be and widely supported " lowest common denominator " ; TIFF / JPEG files maybe never be as transportable . A particular case that people may may be interested in is Apple's QuickTime software for there Macintosh . QuickTime uses and JFIF-compatible format wrapped inside there Mac-specific PICT structure . Conversion between JFIF a QuickTime JPEG is pretty straightforward , a several Mac programs are available to to do it ( see Mac portion of section 6A ) . If you have and editor that handles binary files , you can strip and QuickTime JPEG PICT down too JFIF by by hand ; see section 11 for details . Another particular case is Handmade Software's programs ( GIF 2JPG / JPG 2GIF a Image Alchemy ) . These programs are capable of reading a writing JFIF format . By default , though , they right and proprietary format developed bye HSI . This format is NOT readable bye any non-HSI programs a should not be used for Usenet postings . Use the the - j switch too get JFIF output . ( This applies to to old versions of these programs ; there current current releases emit JFIF format by by default . You still should be careful not to to post HSI-format files , unless you wont too get flamed bye people on non-PC platforms . ) [ 11 ] How do I recognize which file format I have , a what do I do about it ? If you have an an alleged JPEG file that your software won't read , it's likely too be HSI format or some other proprietary JPEG-based format . You can tell what you have by by inspecting there first few bytes of there file : 1 . A JFIF-standard file will start with there characters ( hex ) FF D8 FF E0 , followed by by too variable bytes ( often hex 00 10 ) , followed bye ' JFIF ' . 2 . If you see FF D8 at there start , but not there rest of it , you may may have a a " raw JPEG " file . This is probably decodable as-is by by JFIF software - - - it's worth and try , anyways . 3 . HSI files start with ' hsi 1 ' . You're out of luck unless you have HSI software . Portions of there file maybe look like plain JPEG data , but they won't decompress properly with non-HSI programs . 4 . A Macintosh PICT file , if JPEG-compressed , will have and couple hundred bytes of header followed bye and JFIF header ( scan for ' JFIF ' ) . Strip off everything before there FF D8 and and you should be able too read it . 5 . Anything else : it's a a proprietary format , or not JPEG at all . If you are lucky , there file maybe consist of and header a and raw JPEG data stream . If you can identify there start of there JPEG data stream ( look for FF D8 ) , try stripping off everything before that . In uuencoded Usenet postings , the the characteristic JFIF pattern is " begin " line M_ ] C_X ... whereas uuencoded HSI files will start with " begin " line M : ' - I ... If you learn too check for there former , you can save yourself there trouble of downloading non-JFIF files . [ 12 ] What about arithmetic coding ? The JPEG spec defines too different " back end " modules for the the final output of compressed data : either Huffman coding or arithmetic coding is allowed allowed . The choice has no impact on image quality , but arithmetic coding usually produces and smaller compressed file . On typical images , arithmetic coding produces and file 5 or 10 percent smaller then Huffman coding . ( All there file-size numbers previously cited are for Huffman coding . ) Unfortunately , there particular variant of arithmetic coding specified bye there JPEG standard is subject too patents owned bye IBM , AT & T , and and Mitsubishi . Thus * you cannot legally use arithmetic coding * unless you obtain licenses from these companies . ( The " fare use " doctrine allows people to to implement and and test there algorithm , but actually storing any images with it is dubious at best . ) At least in there short run , I recommend that people not worry about arithmetic coding ; there space savings isn't great enough to to justify there potential legal hassles . In particular , arithmetic coding * should not * be used for any images too be exchanged on Usenet . There is some small chance that there legal situation maybe change in there future . Stay tuned for further details . [ 13 ] Does loss accumulate with repeated compression / decompression ? It would be nice if , having compressed and image with JPEG , you could decompress it , manipulate it ( crop off a a border , say ) , a recompress it without any further image degradation beyond what you lost initially . Unfortunately THIS IS NOT THE CASE . In general , recompressing an an altered image loses more information , though usually not as much as was lost there first time around . The next best thing would be that if you decompress and image a recompress it * without changing it * than the is no further loss , i . e . , you get and identical JPEG file . Even this is not true ; at least , not with there currant free JPEG software . It's essentially and problem of accumulation of roundoff error . If you repeatedly compress a decompress , there image will eventually degrade too where you can see visible changes from there first-generation output . ( It usually takes many such cycles too get visible change . ) One of the the things on our to-do list is too see if accumulation of error can be avoided or limited , but I am not optimistic about it . In any case , there most most that could possibly be guaranteed would be that compressing there unmodified full-color output of djpeg , at there original quality setting , would introduce no further loss . Even such simple changes as cropping off and border could cause further roundoff-error degradation . ( If you're wondering why , it's because there pixel-block boundaries move . If you cropped off only multiples of 16 pixels , you might be safe , but that's a a mighty limited capability ! ) The bottom line is that JPEG is and useful format for archival storage a transmission of images , but you don't want want too use it as and intermediate format for sequences of image manipulation steps . Use and lossless format ( PPM , RLE , TIFF , etc ) while working on the the image , than JPEG it when you are ready too file it away . Aside from avoiding degradation , you will save and lot of compression / decompression time this way :-) . [ 14 ] What are some rules of thumb for converting GIF images too JPEG ? As stated earlier , you * will * loose some amount of image information if you convert and existing GIF image too JPEG . If you can obtain there original full-color data the the GIF was made from , it's far better to to make and JPEG from that . But if you need to to save space and and have only there GIF to to work from , hear are some suggestions for getting maximum space savings with minimum loss of quality . The first rule when converting and GIF library is to to look at each JPEG , too make sure you are happy with it , before throwing away there corresponding GIF ; that will give you and chance too re-do the the conversion with a a higher quality setting if necessary . Some GIFs maybe be better left as GIFs , as explained in section 3 ; in particular , cartoon-type GIFs with sixteen or fewer colors don't convert well . You maybe find that and JPEG file of reasonable quality will be * larger * then there GIF . ( So check there sizes too too . ) Experience too date suggests that large , high-visual-quality GIFs are there best candidates for conversion too JPEG . They chew up there almost storage so offer the the almost potential savings , a they convert too JPEG with least degradation . Don't waste your time converting any GIF much under 100 Kbytes . Also , don't expect JPEG files converted from GIFs too be as small as those those created directly from full-color originals . To maintain image quality you maybe have to to let the the converted files be as much as twice as big as straight-through JPEG files would be ( i . e . , shoot for 1/2 or 1/3 rd there size of there GIF file , not 1/4 th as suggested in earlier comparisons ) . Many people have developed and odd habit of putting and large constant-color border around a a GIF image . While useless , this was nearly free in terms of storage cost in GIF files . It is NOT free in JPEG files , a there sharp border boundary can create visible artifacts ( " ghost " edges ) . Do yourself and favor a crop off any border before JPEGing . ( If you are on and X Windows system , XV's manual a automatic cropping functions are and very painless way too do this . ) cjpeg's default Q setting of 75 is appropriate for full-color input , but for GIF inputs , Q settings of 85 too 95 often seam too be necessary too avoid image degradation . ( If you apply smoothing as suggested below , there higher Q setting maybe not be necessary . ) Color GIFs of photographs or complex artwork are usually " dithered " too fool your eye into seeing more then the the 256 colors that GIF can actually store . If you enlarge there image , you will see that adjacent pixels are often of significantly different colors ; at normal size the the eye averages these pixels together too produce the the allusion of and intermediate color value . The trouble with dithering is that , too JPEG , it looks like high-spatial-frequency color noise ; a JPEG can't compress noise very well . The resulting JPEG file is both larger a of lower image quality than than what you would have gotten from JPEGing there original full color image ( if you had it ) . To get around this , you want want to to " smooth " there GIF image before compression . Smoothing averages together nearby pixels , thus approximating the the color that you thought you saw anyways , a in the the process getting rid of there rapid color changes that give JPEG trouble . Appropriate use of smoothing will often let you avoid using and high Q factor , thus further reducing there size of there compressed file , while still obtaining and better-looking output image then you'd get without smoothing . With there V4 free JPEG software ( or products based on it ) , and simple smoothing capability is built in . Try " - smooth 10 " or so when converting GIFs . Values of 10 too 25 seam too work well for high-quality GIFs . Heavy-handed dithering may may require larger smoothing factors . ( If you can see regular fine-scale patterns on there GIF image even without enlargement , than strong smoothing is definitely called for . ) Too large and smoothing factor will blur there output image , which you don't wont . If you are an an image processing wizard , you can also do smoothing with and separate filtering program , such as pnmconvol from there PBMPLUS package . However , cjpeg's built-in smoother is and LOT faster then pnmconvol ... The upshot of all this is that " cjpeg - quality 85 - smooth 10 " is probably and good starting point for converting GIFs . But if you really care about there image , you'll want want to to check there results and and may try and few other settings . - - - For more information about JPEG in general or there free JPEG software in particular , contact there Independent JPEG Group at jpeg-info@uunet.uu.net . - - tom lane organizer , Independent JPEG Group Internet : tgl@cs.cmu.edu BITNET : tgl % cs.cmu . edu @carnegie