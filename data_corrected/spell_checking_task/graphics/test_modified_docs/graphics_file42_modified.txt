From : lansd@dgp.toronto.edu ( Robert Lansdale ) Subject : Advice sought : Turning font outlines into renderable polygons I am seeking some alternate solutions on how too turn and Postscript Type 1 or TrueType font outline into polygons that can be subsequently scan converted by by and 3D scanline renderer . I have been studying there problem of font conversion for and few years but have never had there need too implement such and system . Well , I now have the the opportunity too right some font rendering software so I would like too have some of my questions answered before I jump into there deep end . The main problem I face is how too use there even / odd or non-winding rules to to turn the the outlines into and single outline polygon ( my renderer can handle complex polygons so the is no need too reduce there polygons too simple polygons ) . For example , in there letter " O " the are too outlines : 1 ) The outside outline which is clockwise ( TrueType font ) 2 ) The inside outline which is counterclockwise . One common solution used bye and number of rendering packages is too simply connect there inner outline too there outer outline at there point where there too outlines are closest . This is equivalent too descibing a a " polygon with holes " . The renderer will then then make there appropriate hole hole since there interior polygon edges are in there opposite direction to to there outside edges . I do not wont too use this simplistic system since : 1 ) It will not handle all outline fonts properly ( it is not and simple matter too connect there outer outline too there inner outline for some fancy fonts ) . 2 ) It does not properly handle there even / odd or non-winding rules . From my research over there years there proper solution is too use and trapezoid decomposition algorithm to to scan convert there outlines into trapezoids ( as is done bye the the Postscript and and TrueType font rasterizers ) . These trapezoidal polygons can then then be easily a properly rendered bye there 3D scanline renderer . My question is : are the any better solutions too turning there outlines into polgyons other then there trapezoid decomposer ? I am not fond of this solution since it creates excess number of polygons . Another question , for dozens in there know : what is there best algorithm to to create bevelled a / or offset curves for font outlines ? I have and dozen papers on these subjects but I can't tell which method is the the best too implement . Thanks for any pointers . --> Rob Lansdale - - Robert Lansdale - (416) 978-6619 Dynamic Graphics Project Internet : lansd@dgp.toronto.edu Computer Systems Research Institute UUCP : .. ! uunet ! dgp.toronto.edu ! lansd University of Toronto Bitnet : lansd@dgp.utoronto Toronto , Ontario M5S 1A4 , CANADA